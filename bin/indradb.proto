syntax = "proto3";

service IndraDB {
    rpc Transaction (stream TransactionRequest) returns (stream TransactionResponse);
}

message TransactionRequest {
    oneof Request {
        CreateVertexRequest create_vertex = 1;
        GetVerticesRequest get_vertices = 2;
        DeleteVerticesRequest delete_vertices = 3;
        GetVertexCountRequest get_vertex_count = 4;
        CreateEdgeRequest create_edge = 5;
        GetEdgesRequest get_edges = 6;
        DeleteEdgesRequest delete_edges = 7;
        GetEdgeCountRequest get_edge_count = 8;
        GetGlobalMetadataRequest get_global_metadata = 9;
        SetGlobalMetadataRequest set_global_metadata = 10;
        DeleteGlobalMetadataRequest delete_global_metadata = 11;
        GetVertexMetadataRequest get_vertex_metadata = 12;
        SetVertexMetadataRequest set_vertex_metadata = 13;
        DeleteVertexMetadataRequest delete_vertex_metadata = 14;
        GetEdgeMetadataRequest get_edge_metadata = 15;
        SetEdgeMetadataRequest set_edge_metadata = 16;
        DeleteEdgeMetadataRequest delete_edge_metadata = 17;
    }
}

message CreateVertexRequest {
    Vertex vertex = 1;
}

message GetVerticesRequest {
    VertexQuery query = 1;
}

message DeleteVerticesRequest {
    VertexQuery query = 1;
}

message GetVertexCountRequest { }

message CreateEdgeRequest {
    EdgeKey key = 1;
}

message GetEdgesRequest {
    EdgeQuery query = 1;
}

message DeleteEdgesRequest {
    EdgeQuery query = 1;
}

message GetEdgeCountRequest {
    string id = 1;
    string type_filter = 2;
    string direction = 3;
}

message GetGlobalMetadataRequest {
    string name = 1;
}

message SetGlobalMetadataRequest {
    string name = 1;
    string value = 2;
}

message DeleteGlobalMetadataRequest {
    string name = 1;
}

message GetVertexMetadataRequest {
    VertexQuery query = 1;
    string name = 2;
}

message SetVertexMetadataRequest {
    VertexQuery query = 1;
    string name = 2;
    string value = 3;
}

message DeleteVertexMetadataRequest {
    VertexQuery query = 1;
    string name = 2;
}

message GetEdgeMetadataRequest {
    EdgeQuery query = 1;
    string name = 2;
}

message SetEdgeMetadataRequest {
    EdgeQuery query = 1;
    string name = 2;
    string value = 3;
}

message DeleteEdgeMetadataRequest {
    EdgeQuery query = 1;
    string name = 2;
}

message Vertex {
    string id = 1;
    string type = 2;
}

message Vertices {
    repeated Vertex vertices = 1;
}

message Edge {
    EdgeKey key = 1;
    string type = 2;
}


message EdgeKey {
    string outbound_id = 1;
    string type = 2;
    string inbound_id = 3;
}

message VertexQuery {
    oneof Query {
        AllVertexQuery all = 1;
        VerticesVertexQuery vertices = 2;
        PipeVertexQuery pipe = 3;
    }
}

message AllVertexQuery {
    string start_id = 1;
    uint32 limit = 2;
}

message VerticesVertexQuery {
    repeated string ids = 1;
}

message PipeVertexQuery {
    EdgeQuery query = 1;
    string converter = 2;
    uint32 limit = 3;
}

message EdgeQuery {
    oneof Query {
        EdgesEdgeQuery edges = 1;
        PipeEdgeQuery pipe = 2;
    }
}

message EdgesEdgeQuery {
    repeated EdgeKey keys = 1;
}

message PipeEdgeQuery {
    VertexQuery query = 1;
    string converter = 2;
    string type_filter = 3;
    uint64 high_filter = 4;
    uint64 low_filter = 5;
    uint32 limit = 6;
}

message TransactionResponse {
    oneof Response {
        CreateVertexResponse create_vertex = 1;
        GetVerticesResponse get_vertices = 2;
        DeleteVerticesResponse delete_vertices = 3;
        GetVertexCountResponse get_vertex_count = 4;
        CreateEdgeResponse create_edge = 5;
        GetEdgesResponse get_edges = 6;
        DeleteEdgesResponse delete_edges = 7;
        GetEdgeCountResponse get_edge_count = 8;
        GetGlobalMetadataResponse get_global_metadata = 9;
        SetGlobalMetadataResponse set_global_metadata = 10;
        DeleteGlobalMetadataResponse delete_global_metadata = 11;
        GetVertexMetadataResponse get_vertex_metadata = 12;
        SetVertexMetadataResponse set_vertex_metadata = 13;
        DeleteVertexMetadataResponse delete_vertex_metadata = 14;
        GetEdgeMetadataResponse get_edge_metadata = 15;
        SetEdgeMetadataResponse set_edge_metadata = 16;
        DeleteEdgeMetadataResponse delete_edge_metadata = 17;
    }
}

message CreateVertexResponse {
    string error = 1;
}

message GetVerticesResponse {
    oneof Response {
        Vertices vertices = 1;
        string error = 2;
    }
}

message DeleteVerticesResponse {
    string error = 1;
}

message GetVertexCountResponse {
    uint64 count = 1;
    string error = 2;
}

message CreateEdgeResponse {
    bool created = 1;
    string error = 2;
}

message GetEdgesResponse {
    repeated Edge edges = 1;
    string error = 2;
}

message DeleteEdgesResponse {
    string error = 1;
}

message GetEdgeCountResponse {
    uint64 count = 1;
    string error = 2;
}

message GetGlobalMetadataResponse {
    string metadata = 1;
    string error = 2;
}

message SetGlobalMetadataResponse {
    string error = 1;
}

message DeleteGlobalMetadataResponse {
    string error = 1;
}

message GetVertexMetadataResponse {
    repeated VertexMetadata metadata = 1;
    string error = 2;
}

message SetVertexMetadataResponse {
    string error = 1;
}

message DeleteVertexMetadataResponse {
    string error = 1;
}

message GetEdgeMetadataResponse {
    repeated VertexMetadata metadata = 1;
    string error = 2;
}

message SetEdgeMetadataResponse {
    string error = 1;
}

message DeleteEdgeMetadataResponse {
    string error = 1;
}

message VertexMetadata {
    string id = 1;
    string metadata = 2;
}

message EdgeMetadata {
    Edge key = 1;
    string metadata = 2;
}
